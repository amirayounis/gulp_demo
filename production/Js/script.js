class AlertService{constructor(){this.errorBox=document.getElementById("error")}handleAdditionError(e,t){const r=e.reduce(((e,r,n)=>inputsAreValid(t[n])?e+"":e+`${r} is not a number. `),"Please enter two valid numbers! ");this.errorBox.classList.remove("invisible"),this.errorBox.innerText=r}hideErrors(){this.errorBox.classList.add("invisible")}}class ComponentService{constructor(){this.numberOneInput=document.getElementById("numberOne"),this.numberTwoInput=document.getElementById("numberTwo"),this.addValuesButton=document.getElementById("addValues"),this.resultDiv=document.getElementById("result")}getInputs(){return[this.numberOneInput.value,this.numberTwoInput.value]}setResult(e){this.resultDiv.innerText=e}onClick(e){this.addValuesButton.addEventListener("click",e)}}const alertService=new AlertService,componentService=new ComponentService,inputsAreValid=(...e)=>e.every((e=>"number"==typeof e&&!isNaN(e))),parseInputs=(...e)=>e.map((e=>parseInt(e))),run=(e,t)=>{e.hideErrors(),t.onClick((()=>{e.hideErrors();const r=t.getInputs(),n=parseInputs(...r);if(inputsAreValid(...n)){const[e,r]=n;t.setResult(e+r)}else t.setResult(""),e.handleAdditionError(r,n)}))};run(alertService,componentService);